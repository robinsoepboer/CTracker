// <auto-generated />
using System;
using CTracker.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTracker.DAL.Migrations
{
    [DbContext(typeof(CTrackerContext))]
    partial class CTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CTracker.DAL.Entities.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CoinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoinId = 1,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6484),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6485),
                            PortfolioId = 1
                        },
                        new
                        {
                            Id = 2,
                            CoinId = 2,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6487),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6488),
                            PortfolioId = 1
                        },
                        new
                        {
                            Id = 3,
                            CoinId = 3,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6489),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6490),
                            PortfolioId = 1
                        },
                        new
                        {
                            Id = 4,
                            CoinId = 4,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6491),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6492),
                            PortfolioId = 1
                        });
                });

            modelBuilder.Entity("CTracker.DAL.Entities.AssetHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Unrealized")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnrealizedPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("AssetHistories");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6463),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6464),
                            Name = "Bitcoin",
                            Symbol = "BTC"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6466),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6467),
                            Name = "Ethereum",
                            Symbol = "ETH"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6468),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6469),
                            Name = "Cardano",
                            Symbol = "ADA"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6470),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6471),
                            Name = "USD Coin",
                            Symbol = "USDC"
                        });
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6363),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 1, 7, 11, 28, 6, 86, DateTimeKind.Local).AddTicks(6404),
                            Name = "Test"
                        });
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 10)
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("CoinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasPrecision(18, 10)
                        .HasColumnType("decimal(18,10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 10)
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Trade");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Asset", b =>
                {
                    b.HasOne("CTracker.DAL.Entities.Coin", "Coin")
                        .WithMany("Assets")
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTracker.DAL.Entities.Portfolio", "Portfolio")
                        .WithMany("Assets")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coin");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.AssetHistory", b =>
                {
                    b.HasOne("CTracker.DAL.Entities.Asset", "Asset")
                        .WithMany("History")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Trade", b =>
                {
                    b.HasOne("CTracker.DAL.Entities.Coin", "Coin")
                        .WithMany()
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTracker.DAL.Entities.Portfolio", "Portfolio")
                        .WithMany("Trades")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coin");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Asset", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Coin", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("CTracker.DAL.Entities.Portfolio", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Trades");
                });
#pragma warning restore 612, 618
        }
    }
}
